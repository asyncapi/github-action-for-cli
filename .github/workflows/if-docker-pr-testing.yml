#This action is centrally managed in https://github.com/asyncapi/.github/
#Don't make changes to this file in this repo as they will be overwritten with changes made to the same file in above mentioned repo
#It does magic only if there is a Dockerfile in the root of the project
name: PR testing - if Docker

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-docker-pr:
    name: Test Docker build
    runs-on: ubuntu-latest
    
    steps:
      - if: >
          !github.event.pull_request.draft && !(
            (github.actor == 'asyncapi-bot' && (
              startsWith(github.event.pull_request.title, 'ci: update global workflows') || 
              startsWith(github.event.pull_request.title, 'chore: update code of conduct') || 
              startsWith(github.event.pull_request.title, 'ci: update global contribution guide') || 
              startsWith(github.event.pull_request.title, 'ci: update workflows for go projects') || 
              startsWith(github.event.pull_request.title, 'ci: update workflows for nodejs projects') || 
              startsWith(github.event.pull_request.title, 'ci: update release-related workflows for nodejs projects') || 
              startsWith(github.event.pull_request.title, 'ci: update semantic release config file') || 
              startsWith(github.event.pull_request.title, 'ci: update generic workflows') || 
              startsWith(github.event.pull_request.title, 'ci: update workflows for docker-based projects') ||
              startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'allcontributors' && 
              startsWith(github.event.pull_request.title, 'docs: add')
            )
          )
        id: should_run
        name: Should Run
        run: echo "::set-output name=shouldrun::true"

      - if: steps.should_run.outputs.shouldrun == 'true' 
        name: Checkout repository
        uses: actions/checkout@v3

      - if: steps.should_run.outputs.shouldrun == 'true' 
        name: Check if project has a Dockerfile
        id: docker
        run: test -e ./Dockerfile && echo "::set-output name=exists::true" || echo "::set-output name=exists::false"
        shell: bash

      - if: steps.docker.outputs.exists == 'true'
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - if: steps.docker.outputs.exists == 'true'
        name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}

      - if: steps.docker.outputs.exists == 'true'
        name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
